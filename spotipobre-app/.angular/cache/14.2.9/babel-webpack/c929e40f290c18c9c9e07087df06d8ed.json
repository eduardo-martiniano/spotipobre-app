{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Martiniano/Desktop/SpotiPobre/spotipobre-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3001/';\n  }\n\n  validate(url) {\n    return new Promise((resolve, reject) => {\n      this.http.get(this.baseUrl + 'validate?url=' + url).subscribe(result => resolve(result), error => reject(error));\n    });\n  }\n\n  download(url, format) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield fetch(`${_this.baseUrl}${format}?url=${url}`);\n\n      if (res.status == 200) {\n        var a = document.createElement('a');\n        a.href = `${_this.baseUrl}${format}?url=${url}`;\n        a.setAttribute('download', '');\n        a.click();\n      }\n    })();\n  }\n\n}\n\nSpotiService.ɵfac = function SpotiService_Factory(t) {\n  return new (t || SpotiService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nSpotiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotiService,\n  factory: SpotiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAMA,OAAM,MAAOA,YAAP,CAAmB;EAGvBC,YAAoBC,IAApB,EAAoC;IAAhB;IAFZ,eAAU,wBAAV;EAEgC;;EAExCC,QAAQ,CAACC,GAAD,EAAY;IAClB,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;MACrC,KAAKL,IAAL,CAAUM,GAAV,CAAmB,KAAKC,OAAL,GAAe,eAAf,GAAiCL,GAApD,EAAyDM,SAAzD,CACGC,MAAD,IAAYL,OAAO,CAACK,MAAD,CADrB,EAEGC,KAAD,IAAWL,MAAM,CAACK,KAAD,CAFnB;IAID,CALM,CAAP;EAMD;;EAEKC,QAAQ,CAACT,GAAD,EAAcU,MAAd,EAA4B;IAAA;;IAAA;MACxC,MAAMC,GAAG,SAASC,KAAK,CAAC,GAAG,KAAI,CAACP,OAAO,GAAGK,MAAM,QAAQV,GAAG,EAApC,CAAvB;;MACA,IAAIW,GAAG,CAACE,MAAJ,IAAc,GAAlB,EAAuB;QACrB,IAAIC,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAR;QACAF,CAAC,CAACG,IAAF,GAAS,GAAG,KAAI,CAACZ,OAAO,GAAGK,MAAM,QAAQV,GAAG,EAA5C;QACAc,CAAC,CAACI,YAAF,CAAe,UAAf,EAA2B,EAA3B;QACAJ,CAAC,CAACK,KAAF;MACD;IAPuC;EAQzC;;AAtBsB;;;mBAAZvB,cAAYwB;AAAA;;;SAAZxB;EAAYyB,SAAZzB,YAAY;EAAA0B,YAFX","names":["SpotiService","constructor","http","validate","url","Promise","resolve","reject","get","baseUrl","subscribe","result","error","download","format","res","fetch","status","a","document","createElement","href","setAttribute","click","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Martiniano\\Desktop\\SpotiPobre\\spotipobre-app\\src\\app\\services\\spoti.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SpotiService {\r\n  private baseUrl = 'http://localhost:3001/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  validate(url: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get<any>(this.baseUrl + 'validate?url=' + url).subscribe(\r\n        (result) => resolve(result),\r\n        (error) => reject(error)\r\n      );\r\n    });\r\n  }\r\n\r\n  async download(url: string, format: string) {\r\n    const res = await fetch(`${this.baseUrl}${format}?url=${url}`);\r\n    if (res.status == 200) {\r\n      var a = document.createElement('a');\r\n      a.href = `${this.baseUrl}${format}?url=${url}`;\r\n      a.setAttribute('download', '');\r\n      a.click();\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}